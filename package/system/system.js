import{BufferGeometry,Float32BufferAttribute,Scene}from"three";export class ParticleSystem{constructor(){this.particles=[],this.numberParticles=0,this.speed=1,this.geometry=new BufferGeometry,this.scene=new Scene}setParticlesNumber(e){this.numberParticles=e}getParticlesNumber(){return this.particles.length}setGeometry(e){this.geometry=e,this.makeVertices()}setSpeed(e){this.speed=e}changeSpeed(e){this.speed=e}makeVertices(){const e=[];for(let t=0;t<this.numberParticles;t++){const t=this.make();this.particles.push(t),e.push(t.x,t.y,t.z)}this.updateGeometricParticles(e)}updateGeometricParticles(e){this.geometry.setAttribute("position",new Float32BufferAttribute(e,3))}random(e,t){return Math.random()*(t-e)+e}dispose(){this.geometry.dispose(),this.geometry.deleteAttribute("position"),this.particles=[],this.numberParticles=0,this.speed=1}setScene(e){this.scene=e}apply(e,t,s,i){this.geometry.attributes.position.setXYZ(e,t,s,i)}updateParticles(){const e=[];for(let t=0;t<this.particles.length;t++){const s=this.particles[t];e.push(s.x,s.y,s.z)}this.updateGeometricParticles(e)}validatePositiveNumber(e){return e>=0}changeNumberParticles(e){if(e=Number(e.toPrecision(1)),this.validatePositiveNumber(e)&&(e<this.numberParticles&&(this.particles=this.particles.splice(this.numberParticles-e),this.setParticlesNumber(this.particles.length),this.updateParticles()),e>this.numberParticles)){for(let t=0;t<e;t++)this.particles.push(this.make());this.setParticlesNumber(this.numberParticles+e),this.updateParticles()}}}